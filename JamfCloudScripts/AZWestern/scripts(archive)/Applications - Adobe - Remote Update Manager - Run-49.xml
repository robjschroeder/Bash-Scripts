<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<script>
    <id>49</id>
    <name>Applications - Adobe - Remote Update Manager - Run</name>
    <category>Utilities</category>
    <filename>Applications - Adobe - Remote Update Manager - Run</filename>
    <info></info>
    <notes></notes>
    <priority>After</priority>
    <parameters></parameters>
    <os_requirements></os_requirements>
    <script_contents>#!/bin/sh
#
#
# Created by John Mahlman, University of the Arts Philadelphia (jmahlman@uarts.edu)
# Name: Adobe-RUMWithProgress-jamfhelper
#
# Purpose: This script uses jamfhelper to show which updates are available for Adobe CC and asks
# if they would like to install those updates.  If they choose to install updates it will begin installing updates.
#
# Changelog
#
# 5/3/18  - Just adding "Uarts" to the window title.
# 4/25/18	-	Thanks for user remyb we've decided to move to using jamfhelper instead of cocoadialog. Instead of
#						updating the old script, I'm just going to create this new one so non-jamf people can still use the other.
# 4/25/18 - Changed all CocoaDialog stuff to jamfHelper - remyb (Thanks!)
# 2/22/18 - Cleaned up some logic to make it prettier
# 1/8/18  - Updated channel ID list with new channels and names
# 9/8/17  - Added link to channel ID list from Adobe
# 8/31/17 - Just some cleaning up
# 8/29/17 - Added a "caffeinate" command when installing updates to stop systems from sleeping during long installs
# 6/19/17 - Removed the "wait" command at the end because it was just causing things to hang
#         - Added some sleep 0.2 lines to allow the script some time to catch up
#         - Fixed Dreamweaver channel ID
#         - Added jamf_bin to determine which jamf binary to use
# 3/23/17 - Added more to "super-echo" to make it nicer for the user to read what's available for updates
# 2/21/17 - Cleaned up script to make it in line with my styling.
#

icons=/System/Library/CoreServices/CoreTypes.bundle/Contents/Resources
rumlog=/var/tmp/RUMupdate.log # mmmmmm, rum log
jamfHelper="/Library/Application Support/JAMF/bin/jamfHelper.app/Contents/MacOS/jamfHelper"
oldRUM=/usr/sbin/RemoteUpdateManager # this is where RUM used to live pre-10.11
rum=/usr/local/bin/RemoteUpdateManager # post-10.11
jamf_bin=/usr/local/bin/jamf

# Installer function
installUpdates ()
{
    # Let's caffinate the mac because this can take long
    caffeinate -d -i -m -u &amp;
    caffeinatepid=$!

    # Displaying jamfHelper
    "$jamfHelper" -windowType hud -title "Arizona Western College Adobe Updater" -description "Downloading and Installing Updates, this may take some time..." \
    -icon "$icons/Sync.icns" -lockHUD &gt; /dev/null 2&gt;&amp;1 &amp;

    # do all of your work here
    $rum --action=install

    # Kill jamfhelper
    killall jamfHelper &gt; /dev/null 2&gt;&amp;1

    # No more caffeine please. I've a headache.
    kill "$caffeinatepid"

    exit 0
}


#############
#  Script   #
#############


# old RUM installed?
if [ -f $oldRUM ] ; then
    rm -rf $oldRUM
fi

# new/current RUM installed?
if [ ! -f $rum ] ; then
	echo "Installing RUM from JSS"
	$jamf_bin policy -event installRUM
	if [ ! -f $rum ] ; then
		echo "Couldn't install RUM! Exiting."
		exit 1
	fi
fi

# Not that it matters but we'll remove the old log file if it exists
if [ -f $rumlog ] ; then
    rm $rumlog
fi

#run RUM and output to the log file
touch $rumlog
$rum --action=list &gt; $rumlog

# super-echo!  Echo pretty-ish output to user. Replaces Adobes channel IDs with actual app names
# I think it's silly that I have to do this, but whatever. :)
# Adobe channel ID list: https://helpx.adobe.com/enterprise/package/help/apps-deployed-without-their-base-versions.html
secho=`sed -n '/Following*/,/\*/p' $rumlog \
    | sed 's/Following/The\ Following/g' \
    | sed 's/ACR/Acrobat/g' \
    | sed 's/AEFT/After\ Effects/g' \
    | sed 's/AME/Media\ Encoder/g' \
    | sed 's/AUDT/Audition/g' \
    | sed 's/FLPR/Animate/g' \
    | sed 's/ILST/Illustrator/g' \
    | sed 's/MUSE/Muse/g' \
    | sed 's/PHSP/Photoshop/g' \
    | sed 's/PRLD/Prelude/g' \
    | sed 's/SPRK/XD/g' \
    | sed 's/KBRG/Bridge/g' \
    | sed 's/AICY/InCopy/g' \
    | sed 's/ANMLBETA/Character\ Animator\ Beta/g' \
    | sed 's/DRWV/Dreamweaver/g' \
    | sed 's/IDSN/InDesign/g' \
    | sed 's/PPRO/Premiere\ Pro/g' \
    | sed 's/LTRM/Lightroom\ Classic/g' \
    | sed 's/CHAR/Character\ Animator/g' \
    | sed 's/ESHR/Dimension/g' `

if [ "$(grep "Following Updates are applicable" $rumlog)" ] ; then
  userChoice=$("$jamfHelper" -windowType hud -lockHUD -title "Arizona Western College Adobe Updater" \
  -icon "$icons/ToolbarInfo.icns" -description "Do you want to install these updates?
$secho" -button1 "Yes" -button2 "No")
    if [ "$userChoice" == "0" ]; then
        echo "User said yes, installing $secho"
        installUpdates
    elif [ "$userChoice" == "2" ]; then
        echo "User said no"
        exit 0
    fi
else
    "$jamfHelper" -windowType hud -title "Arizona Western College Adobe Updater" -description "There are no Adobe Updates available." \
    -icon "$icons/ToolbarInfo.icns" -button1 Ok -defaultButton 1
    exit 0
fi</script_contents>
    <script_contents_encoded>IyEvYmluL3NoCiMKIwojIENyZWF0ZWQgYnkgSm9obiBNYWhsbWFuLCBVbml2ZXJzaXR5IG9mIHRoZSBBcnRzIFBoaWxhZGVscGhpYSAoam1haGxtYW5AdWFydHMuZWR1KQojIE5hbWU6IEFkb2JlLVJVTVdpdGhQcm9ncmVzcy1qYW1maGVscGVyCiMKIyBQdXJwb3NlOiBUaGlzIHNjcmlwdCB1c2VzIGphbWZoZWxwZXIgdG8gc2hvdyB3aGljaCB1cGRhdGVzIGFyZSBhdmFpbGFibGUgZm9yIEFkb2JlIENDIGFuZCBhc2tzCiMgaWYgdGhleSB3b3VsZCBsaWtlIHRvIGluc3RhbGwgdGhvc2UgdXBkYXRlcy4gIElmIHRoZXkgY2hvb3NlIHRvIGluc3RhbGwgdXBkYXRlcyBpdCB3aWxsIGJlZ2luIGluc3RhbGxpbmcgdXBkYXRlcy4KIwojIENoYW5nZWxvZwojCiMgNS8zLzE4ICAtIEp1c3QgYWRkaW5nICJVYXJ0cyIgdG8gdGhlIHdpbmRvdyB0aXRsZS4KIyA0LzI1LzE4CS0JVGhhbmtzIGZvciB1c2VyIHJlbXliIHdlJ3ZlIGRlY2lkZWQgdG8gbW92ZSB0byB1c2luZyBqYW1maGVscGVyIGluc3RlYWQgb2YgY29jb2FkaWFsb2cuIEluc3RlYWQgb2YKIwkJCQkJCXVwZGF0aW5nIHRoZSBvbGQgc2NyaXB0LCBJJ20ganVzdCBnb2luZyB0byBjcmVhdGUgdGhpcyBuZXcgb25lIHNvIG5vbi1qYW1mIHBlb3BsZSBjYW4gc3RpbGwgdXNlIHRoZSBvdGhlci4KIyA0LzI1LzE4IC0gQ2hhbmdlZCBhbGwgQ29jb2FEaWFsb2cgc3R1ZmYgdG8gamFtZkhlbHBlciAtIHJlbXliIChUaGFua3MhKQojIDIvMjIvMTggLSBDbGVhbmVkIHVwIHNvbWUgbG9naWMgdG8gbWFrZSBpdCBwcmV0dGllcgojIDEvOC8xOCAgLSBVcGRhdGVkIGNoYW5uZWwgSUQgbGlzdCB3aXRoIG5ldyBjaGFubmVscyBhbmQgbmFtZXMKIyA5LzgvMTcgIC0gQWRkZWQgbGluayB0byBjaGFubmVsIElEIGxpc3QgZnJvbSBBZG9iZQojIDgvMzEvMTcgLSBKdXN0IHNvbWUgY2xlYW5pbmcgdXAKIyA4LzI5LzE3IC0gQWRkZWQgYSAiY2FmZmVpbmF0ZSIgY29tbWFuZCB3aGVuIGluc3RhbGxpbmcgdXBkYXRlcyB0byBzdG9wIHN5c3RlbXMgZnJvbSBzbGVlcGluZyBkdXJpbmcgbG9uZyBpbnN0YWxscwojIDYvMTkvMTcgLSBSZW1vdmVkIHRoZSAid2FpdCIgY29tbWFuZCBhdCB0aGUgZW5kIGJlY2F1c2UgaXQgd2FzIGp1c3QgY2F1c2luZyB0aGluZ3MgdG8gaGFuZwojICAgICAgICAgLSBBZGRlZCBzb21lIHNsZWVwIDAuMiBsaW5lcyB0byBhbGxvdyB0aGUgc2NyaXB0IHNvbWUgdGltZSB0byBjYXRjaCB1cAojICAgICAgICAgLSBGaXhlZCBEcmVhbXdlYXZlciBjaGFubmVsIElECiMgICAgICAgICAtIEFkZGVkIGphbWZfYmluIHRvIGRldGVybWluZSB3aGljaCBqYW1mIGJpbmFyeSB0byB1c2UKIyAzLzIzLzE3IC0gQWRkZWQgbW9yZSB0byAic3VwZXItZWNobyIgdG8gbWFrZSBpdCBuaWNlciBmb3IgdGhlIHVzZXIgdG8gcmVhZCB3aGF0J3MgYXZhaWxhYmxlIGZvciB1cGRhdGVzCiMgMi8yMS8xNyAtIENsZWFuZWQgdXAgc2NyaXB0IHRvIG1ha2UgaXQgaW4gbGluZSB3aXRoIG15IHN0eWxpbmcuCiMKCmljb25zPS9TeXN0ZW0vTGlicmFyeS9Db3JlU2VydmljZXMvQ29yZVR5cGVzLmJ1bmRsZS9Db250ZW50cy9SZXNvdXJjZXMKcnVtbG9nPS92YXIvdG1wL1JVTXVwZGF0ZS5sb2cgIyBtbW1tbW0sIHJ1bSBsb2cKamFtZkhlbHBlcj0iL0xpYnJhcnkvQXBwbGljYXRpb24gU3VwcG9ydC9KQU1GL2Jpbi9qYW1mSGVscGVyLmFwcC9Db250ZW50cy9NYWNPUy9qYW1mSGVscGVyIgpvbGRSVU09L3Vzci9zYmluL1JlbW90ZVVwZGF0ZU1hbmFnZXIgIyB0aGlzIGlzIHdoZXJlIFJVTSB1c2VkIHRvIGxpdmUgcHJlLTEwLjExCnJ1bT0vdXNyL2xvY2FsL2Jpbi9SZW1vdGVVcGRhdGVNYW5hZ2VyICMgcG9zdC0xMC4xMQpqYW1mX2Jpbj0vdXNyL2xvY2FsL2Jpbi9qYW1mCgojIEluc3RhbGxlciBmdW5jdGlvbgppbnN0YWxsVXBkYXRlcyAoKQp7CiAgICAjIExldCdzIGNhZmZpbmF0ZSB0aGUgbWFjIGJlY2F1c2UgdGhpcyBjYW4gdGFrZSBsb25nCiAgICBjYWZmZWluYXRlIC1kIC1pIC1tIC11ICYKICAgIGNhZmZlaW5hdGVwaWQ9JCEKCiAgICAjIERpc3BsYXlpbmcgamFtZkhlbHBlcgogICAgIiRqYW1mSGVscGVyIiAtd2luZG93VHlwZSBodWQgLXRpdGxlICJBcml6b25hIFdlc3Rlcm4gQ29sbGVnZSBBZG9iZSBVcGRhdGVyIiAtZGVzY3JpcHRpb24gIkRvd25sb2FkaW5nIGFuZCBJbnN0YWxsaW5nIFVwZGF0ZXMsIHRoaXMgbWF5IHRha2Ugc29tZSB0aW1lLi4uIiBcCiAgICAtaWNvbiAiJGljb25zL1N5bmMuaWNucyIgLWxvY2tIVUQgPiAvZGV2L251bGwgMj4mMSAmCgogICAgIyBkbyBhbGwgb2YgeW91ciB3b3JrIGhlcmUKICAgICRydW0gLS1hY3Rpb249aW5zdGFsbAoKICAgICMgS2lsbCBqYW1maGVscGVyCiAgICBraWxsYWxsIGphbWZIZWxwZXIgPiAvZGV2L251bGwgMj4mMQoKICAgICMgTm8gbW9yZSBjYWZmZWluZSBwbGVhc2UuIEkndmUgYSBoZWFkYWNoZS4KICAgIGtpbGwgIiRjYWZmZWluYXRlcGlkIgoKICAgIGV4aXQgMAp9CgoKIyMjIyMjIyMjIyMjIwojICBTY3JpcHQgICAjCiMjIyMjIyMjIyMjIyMKCgojIG9sZCBSVU0gaW5zdGFsbGVkPwppZiBbIC1mICRvbGRSVU0gXSA7IHRoZW4KICAgIHJtIC1yZiAkb2xkUlVNCmZpCgojIG5ldy9jdXJyZW50IFJVTSBpbnN0YWxsZWQ/CmlmIFsgISAtZiAkcnVtIF0gOyB0aGVuCgllY2hvICJJbnN0YWxsaW5nIFJVTSBmcm9tIEpTUyIKCSRqYW1mX2JpbiBwb2xpY3kgLWV2ZW50IGluc3RhbGxSVU0KCWlmIFsgISAtZiAkcnVtIF0gOyB0aGVuCgkJZWNobyAiQ291bGRuJ3QgaW5zdGFsbCBSVU0hIEV4aXRpbmcuIgoJCWV4aXQgMQoJZmkKZmkKCiMgTm90IHRoYXQgaXQgbWF0dGVycyBidXQgd2UnbGwgcmVtb3ZlIHRoZSBvbGQgbG9nIGZpbGUgaWYgaXQgZXhpc3RzCmlmIFsgLWYgJHJ1bWxvZyBdIDsgdGhlbgogICAgcm0gJHJ1bWxvZwpmaQoKI3J1biBSVU0gYW5kIG91dHB1dCB0byB0aGUgbG9nIGZpbGUKdG91Y2ggJHJ1bWxvZwokcnVtIC0tYWN0aW9uPWxpc3QgPiAkcnVtbG9nCgojIHN1cGVyLWVjaG8hICBFY2hvIHByZXR0eS1pc2ggb3V0cHV0IHRvIHVzZXIuIFJlcGxhY2VzIEFkb2JlcyBjaGFubmVsIElEcyB3aXRoIGFjdHVhbCBhcHAgbmFtZXMKIyBJIHRoaW5rIGl0J3Mgc2lsbHkgdGhhdCBJIGhhdmUgdG8gZG8gdGhpcywgYnV0IHdoYXRldmVyLiA6KQojIEFkb2JlIGNoYW5uZWwgSUQgbGlzdDogaHR0cHM6Ly9oZWxweC5hZG9iZS5jb20vZW50ZXJwcmlzZS9wYWNrYWdlL2hlbHAvYXBwcy1kZXBsb3llZC13aXRob3V0LXRoZWlyLWJhc2UtdmVyc2lvbnMuaHRtbApzZWNobz1gc2VkIC1uICcvRm9sbG93aW5nKi8sL1wqL3AnICRydW1sb2cgXAogICAgfCBzZWQgJ3MvRm9sbG93aW5nL1RoZVwgRm9sbG93aW5nL2cnIFwKICAgIHwgc2VkICdzL0FDUi9BY3JvYmF0L2cnIFwKICAgIHwgc2VkICdzL0FFRlQvQWZ0ZXJcIEVmZmVjdHMvZycgXAogICAgfCBzZWQgJ3MvQU1FL01lZGlhXCBFbmNvZGVyL2cnIFwKICAgIHwgc2VkICdzL0FVRFQvQXVkaXRpb24vZycgXAogICAgfCBzZWQgJ3MvRkxQUi9BbmltYXRlL2cnIFwKICAgIHwgc2VkICdzL0lMU1QvSWxsdXN0cmF0b3IvZycgXAogICAgfCBzZWQgJ3MvTVVTRS9NdXNlL2cnIFwKICAgIHwgc2VkICdzL1BIU1AvUGhvdG9zaG9wL2cnIFwKICAgIHwgc2VkICdzL1BSTEQvUHJlbHVkZS9nJyBcCiAgICB8IHNlZCAncy9TUFJLL1hEL2cnIFwKICAgIHwgc2VkICdzL0tCUkcvQnJpZGdlL2cnIFwKICAgIHwgc2VkICdzL0FJQ1kvSW5Db3B5L2cnIFwKICAgIHwgc2VkICdzL0FOTUxCRVRBL0NoYXJhY3RlclwgQW5pbWF0b3JcIEJldGEvZycgXAogICAgfCBzZWQgJ3MvRFJXVi9EcmVhbXdlYXZlci9nJyBcCiAgICB8IHNlZCAncy9JRFNOL0luRGVzaWduL2cnIFwKICAgIHwgc2VkICdzL1BQUk8vUHJlbWllcmVcIFByby9nJyBcCiAgICB8IHNlZCAncy9MVFJNL0xpZ2h0cm9vbVwgQ2xhc3NpYy9nJyBcCiAgICB8IHNlZCAncy9DSEFSL0NoYXJhY3RlclwgQW5pbWF0b3IvZycgXAogICAgfCBzZWQgJ3MvRVNIUi9EaW1lbnNpb24vZycgYAoKaWYgWyAiJChncmVwICJGb2xsb3dpbmcgVXBkYXRlcyBhcmUgYXBwbGljYWJsZSIgJHJ1bWxvZykiIF0gOyB0aGVuCiAgdXNlckNob2ljZT0kKCIkamFtZkhlbHBlciIgLXdpbmRvd1R5cGUgaHVkIC1sb2NrSFVEIC10aXRsZSAiQXJpem9uYSBXZXN0ZXJuIENvbGxlZ2UgQWRvYmUgVXBkYXRlciIgXAogIC1pY29uICIkaWNvbnMvVG9vbGJhckluZm8uaWNucyIgLWRlc2NyaXB0aW9uICJEbyB5b3Ugd2FudCB0byBpbnN0YWxsIHRoZXNlIHVwZGF0ZXM/CiRzZWNobyIgLWJ1dHRvbjEgIlllcyIgLWJ1dHRvbjIgIk5vIikKICAgIGlmIFsgIiR1c2VyQ2hvaWNlIiA9PSAiMCIgXTsgdGhlbgogICAgICAgIGVjaG8gIlVzZXIgc2FpZCB5ZXMsIGluc3RhbGxpbmcgJHNlY2hvIgogICAgICAgIGluc3RhbGxVcGRhdGVzCiAgICBlbGlmIFsgIiR1c2VyQ2hvaWNlIiA9PSAiMiIgXTsgdGhlbgogICAgICAgIGVjaG8gIlVzZXIgc2FpZCBubyIKICAgICAgICBleGl0IDAKICAgIGZpCmVsc2UKICAgICIkamFtZkhlbHBlciIgLXdpbmRvd1R5cGUgaHVkIC10aXRsZSAiQXJpem9uYSBXZXN0ZXJuIENvbGxlZ2UgQWRvYmUgVXBkYXRlciIgLWRlc2NyaXB0aW9uICJUaGVyZSBhcmUgbm8gQWRvYmUgVXBkYXRlcyBhdmFpbGFibGUuIiBcCiAgICAtaWNvbiAiJGljb25zL1Rvb2xiYXJJbmZvLmljbnMiIC1idXR0b24xIE9rIC1kZWZhdWx0QnV0dG9uIDEKICAgIGV4aXQgMApmaQ==</script_contents_encoded>
</script>